# 注册服务中心配置
server.port=8201
spring.application.name=app-customer-login
eureka.client.service-url.defaultZone: http://localhost:8081/eureka/
feign.sentinel.enabled=true

#sentinel dashboard
spring.cloud.sentinel.transport.dashboard=localhost:8080
spring.main.allow-bean-definition-overriding=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/music?serverTimezone=UTC&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# OAuth2.0配置
# 该地址会获取public key 也就是我们在认证服务器中配置的内容
security.oauth2.resource.jwt.key-uri=http://localhost:8085/oauth/token_key
# 在认证服务器中配置的客户端的id
security.oauth2.client.client-id=user-service
# 在认证服务器中配置的resources的id
security.oauth2.resource.id=user-service
# 在认证服务器中配置的客户端的密码
security.oauth2.client.client-secret=123456
# 获取令牌的地址
security.oauth2.client.access-token-uri=http://localhost:8085/oauth/token
# 在认证服务器中配置的客户端的授权类型
security.oauth2.client.grant-type=password
# 在认证服务器中配置的客户端的授权范围
security.oauth2.client.scope=service
# 通过授权码方式传递授权码
security.oauth2.client.user-authorization-uri=http://localhost:8085/oauth/authorize

